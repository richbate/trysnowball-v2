name: 🌙 Nightly Full Evaluation

on:
  schedule:
    # Run at 2 AM UTC every day
    - cron: '0 2 * * *'
  workflow_dispatch:
    # Allow manual triggering

jobs:
  full-evaluation:
    name: Full System Evaluation
    runs-on: ubuntu-latest
    timeout-minutes: 30

    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 📦 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: '.nvmrc'
          cache: 'npm'

      - name: 📦 Install dependencies
        run: npm ci --prefer-offline --no-audit

      - name: 🧪 Run full evaluation suite
        run: npm run evaluate
        continue-on-error: true
        id: evaluation

      - name: 📊 Generate comprehensive report
        if: always()
        run: |
          # Generate evaluation summary
          npm run eval:summary || echo "Summary generation failed"
          
          # Create comprehensive report
          cat > reports/nightly-report.md << EOF
          # 🌙 Nightly Evaluation Report
          
          **Date**: $(date -u '+%Y-%m-%d %H:%M:%S UTC')
          **Commit**: \`${GITHUB_SHA:0:8}\`
          **Branch**: \`${GITHUB_REF#refs/heads/}\`
          
          ## Evaluation Summary
          EOF
          
          # Append evaluation results if available
          if [ -f "reports/eval-summary.md" ]; then
            cat reports/eval-summary.md >> reports/nightly-report.md
          else
            echo "⚠️ Evaluation summary not generated" >> reports/nightly-report.md
          fi
          
          # Add performance metrics
          cat >> reports/nightly-report.md << EOF
          
          ## Performance Metrics
          - **Total Runtime**: \$(date) 
          - **Node Version**: \$(node --version)
          - **NPM Version**: \$(npm --version)
          
          ## Artifacts
          - Coverage reports available in artifacts
          - JUnit test results available
          - Evaluation logs in workflow output
          
          ---
          *Generated by nightly evaluation workflow*
          EOF

      - name: 📄 Upload comprehensive artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: nightly-evaluation-${{ github.sha }}
          path: |
            reports/
            coverage/
            node_modules/.cache/jest/
          retention-days: 30

      - name: 📧 Notify on failure
        if: failure()
        uses: actions/github-script@v7
        with:
          script: |
            // Create an issue if nightly evaluation fails
            const { owner, repo } = context.repo;
            
            // Check if there's already an open issue for nightly failures
            const issues = await github.rest.issues.listForRepo({
              owner,
              repo,
              labels: ['nightly-evaluation-failure'],
              state: 'open'
            });
            
            const existingIssue = issues.data.find(issue => 
              issue.title.includes('Nightly Evaluation Failure')
            );
            
            const issueBody = `
            ## 🌙 Nightly Evaluation Failed
            
            **Date**: ${new Date().toISOString()}
            **Commit**: \`${context.sha.substring(0, 8)}\`
            **Workflow**: [${context.runId}](${context.payload.repository.html_url}/actions/runs/${context.runId})
            
            The nightly full evaluation suite has failed. This could indicate:
            - Regression in core functionality
            - Environmental issues
            - Dependency problems
            - Performance degradation
            
            ## Next Steps
            1. Review the [workflow logs](${context.payload.repository.html_url}/actions/runs/${context.runId})
            2. Check for any recent changes that might have caused issues
            3. Run \`npm run evaluate\` locally to reproduce
            4. Fix the issues and verify with \`npm run evaluate:ci\`
            
            ## Evaluation Components
            - ✅ Contract tests (feature invariants)
            - ✅ Property tests (math correctness)  
            - ✅ API gateway tests (failure modes)
            - ✅ Analytics tests (PII leak detection)
            - ✅ Config tests (environment safety)
            - ✅ Golden master tests (output consistency)
            
            This issue will be automatically closed when nightly evaluation passes again.
            `;
            
            if (existingIssue) {
              // Update existing issue
              await github.rest.issues.createComment({
                owner,
                repo,
                issue_number: existingIssue.number,
                body: `Another failure detected:\n\n${issueBody}`
              });
            } else {
              // Create new issue
              await github.rest.issues.create({
                owner,
                repo,
                title: '🌙 Nightly Evaluation Failure',
                body: issueBody,
                labels: ['bug', 'nightly-evaluation-failure', 'high-priority']
              });
            }

      - name: 🎉 Close success issue on pass
        if: success()
        uses: actions/github-script@v7
        with:
          script: |
            // Close any open nightly failure issues when evaluation passes
            const { owner, repo } = context.repo;
            
            const issues = await github.rest.issues.listForRepo({
              owner,
              repo,
              labels: ['nightly-evaluation-failure'],
              state: 'open'
            });
            
            for (const issue of issues.data) {
              await github.rest.issues.createComment({
                owner,
                repo,
                issue_number: issue.number,
                body: `✅ Nightly evaluation is now passing again as of commit \`${context.sha.substring(0, 8)}\`. Closing this issue.`
              });
              
              await github.rest.issues.update({
                owner,
                repo,
                issue_number: issue.number,
                state: 'closed'
              });
            }

  performance-baseline:
    name: Performance Baseline
    runs-on: ubuntu-latest
    timeout-minutes: 15
    needs: full-evaluation
    if: always()

    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 📦 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: '.nvmrc'
          cache: 'npm'

      - name: 📦 Install dependencies
        run: npm ci --prefer-offline --no-audit

      - name: 🏃 Run performance benchmarks
        run: |
          # Run property tests with higher iteration count for performance baseline
          time npm run test:property -- --verbose
          
          # Run contracts with timing
          time npm run test:contracts -- --verbose
          
          # Test build performance
          time npm run build:ci

      - name: 📊 Store performance metrics
        run: |
          mkdir -p reports/performance
          
          # Capture timing information
          cat > reports/performance/baseline.json << EOF
          {
            "timestamp": "$(date -u --iso-8601=seconds)",
            "commit": "${GITHUB_SHA}",
            "node_version": "$(node --version)",
            "npm_version": "$(npm --version)",
            "evaluation_completed": true
          }
          EOF

      - name: 📄 Upload performance data
        uses: actions/upload-artifact@v4
        with:
          name: performance-baseline-${{ github.sha }}
          path: reports/performance/
          retention-days: 90