import React from 'react';
import { BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer } from 'recharts';

const PaymentBreakdownChart = ({ data, height = 300 }) => {
 if (!data || data.length === 0) {
  return (
   <div className="flex items-center justify-center h-64 bg-gray-50 rounded-lg">
    <p className="text-gray-500">No payment data available</p>
   </div>
  );
 }

 const CustomTooltip = ({ active, payload, label }) => {
  if (active && payload && payload.length) {
   const total = payload.reduce((sum, entry) => sum + entry.value, 0);
   return (
    <div className="bg-white p-4 border rounded-lg shadow-lg">
     <p className="font-semibold">{`Month ${label}`}</p>
     <p className="text-sm text-gray-600 mb-2">{`Total Payment: £${total.toFixed(2)}`}</p>
     {payload.map((entry, index) => (
      <p key={index} style={{ color: entry.color }}>
       {`${entry.name}: £${entry.value.toFixed(2)}`}
      </p>
     ))}
    </div>
   );
  }
  return null;
 };

 return (
  <div className="w-full">
   <ResponsiveContainer width="100%" height={height}>
    <BarChart
     data={data}
     margin={{
      top: 20,
      right: 30,
      left: 20,
      bottom: 5,
     }}
    >
     <CartesianGrid strokeDasharray="3 3" stroke="#f0f0f0" />
     <XAxis 
      dataKey="month" 
      stroke="#6b7280"
      tick={{ fontSize: 12 }}
     />
     <YAxis 
      stroke="#6b7280"
      tick={{ fontSize: 12 }}
      tickFormatter={(value) => `£${value}`}
     />
     <Tooltip content={<CustomTooltip />} />
     <Legend />
     <Bar 
      dataKey="interest" 
      stackId="a" 
      fill="#ef4444" 
      name="Interest" 
      radius={[0, 0, 0, 0]}
     />
     <Bar 
      dataKey="principal" 
      stackId="a" 
      fill="#3b82f6" 
      name="Principal (Min Payment)" 
      radius={[0, 0, 0, 0]}
     />
     <Bar 
      dataKey="snowball" 
      stackId="a" 
      fill="#10b981" 
      name="Snowball Extra" 
      radius={[2, 2, 0, 0]}
     />
    </BarChart>
   </ResponsiveContainer>
  </div>
 );
};

export default PaymentBreakdownChart;