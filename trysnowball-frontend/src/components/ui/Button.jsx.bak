import React from 'react';
import { useNavigate } from 'react-router-dom';
import clsx from 'clsx';

const base =
 "inline-flex items-center justify-center rounded-button font-medium tracking-tight transition-all duration-200 " +
 "focus:outline-none focus-visible:ring-2 focus-visible:ring-offset-2 disabled:opacity-60 disabled:cursor-not-allowed";

const sizes = {
 sm: "h-9 px-3 text-sm min-w-[80px]",
 md: "h-11 px-4 text-sm min-w-[100px]", 
 lg: "h-12 px-5 text-base min-w-[120px]"
};

const variants = {
 primary:
  "bg-primary text-white hover:bg-accent hover:shadow-lg focus-visible:ring-primary",
 secondary:
  "bg-text text-white hover:bg-text hover:shadow-md focus-visible:ring-border",
 muted:
  "bg-surface text-text border border-border hover:bg-bg hover:shadow-md focus-visible:ring-border",
 ghost:
  "text-muted hover:bg-bg hover:shadow-sm focus-visible:ring-border",
 destructive:
  "bg-danger text-white hover:bg-danger hover:shadow-md focus-visible:ring-danger",
 special:
  "bg-gradient-to-r from-purple-500 to-pink-500 text-white hover:from-purple-600 hover:to-pink-600 hover:shadow-lg focus-visible:ring-purple-400"
};

export default function Button({
 children,
 variant = "primary",
 size = "md",
 className,
 leftIcon: LeftIcon,
 loading = false,
 to,
 ...props
}) {
 const navigate = useNavigate();

 const handleClick = (e) => {
  if (to) {
   e.preventDefault();
   navigate(to);
  }
  if (props.onClick) {
   props.onClick(e);
  }
 };

 return (
  <button
   className={clsx(base, sizes[size], variants[variant], className)}
   disabled={loading || props.disabled}
   onClick={handleClick}
   {...props}
  >
   {loading ? (
    <div className="mr-2 h-4 w-4 animate-spin rounded-full border-2 border-current border-t-transparent" />
   ) : LeftIcon ? (
    <LeftIcon className="mr-2 h-5 w-5" />
   ) : null}
   {children}
  </button>
 );
}